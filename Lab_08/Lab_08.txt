1.Select name,price,
	CASE
		when price<=1000 THEN 'Cheap'
		when price BETWEEN 1001 AND 3000 THEN 'Moderate'
		when price>3000 THEN 'Expensive'
		END AS 'Category'
 from Products
 
2.SELECT name,order_id,total_amount,
		Case
			when city='Lahore' AND total_amount>5000 THEN '10%'
			when city='Karachi' AND total_amount>3000 THEN '5%'
			Else 'No Discount'
		END AS 'Discount_Applied',
		Case
			when city='Lahore' AND total_amount>5000 THEN total_amount-(total_amount*(0.1))
			when city='Karachi' AND total_amount BETWEEN 3000 AND 4999 THEN total_amount-(total_amount*(0.05))
			Else total_amount
		END AS 'Discount_Total'
 from Customers  join Orders on Customers.customer_id=Orders.customer_id;
 
3.SELECT 
	CASE	
		when total_amount<=1000 THEN 'Low'
		when total_amount BETWEEN 1001 AND 5000 THEN 'Medium'
		when total_amount>5000 THEN 'High'
		End As 'Category_Name',
		count(order_id) as Total_orders,
		Sum(total_amount) as Total_ALL_orders
from Orders
group by Category_Name;


4.SELECT Products.name,(quantity*unit_price) as Total_Sales,
	CASE
		when (quantity*unit_price)<=5000 THEN 'Low Seller'
		when (quantity*unit_price) BETWEEN 5001 AND 20000 THEN 'Medium Seller'
		when (quantity*unit_price)>20000 THEN 'High Seller'
	End as 'Sales Category'
from Order_Items join Products on Order_Items.product_id=Products.product_id
group by Products.name;

5.SELECT name,city,order_id,total_amount
from Customers join Orders
on Customers.customer_id=Orders.customer_id
order by 
		case 
			when city='Lahore' THEN total_amount 
		END desc,
		Case
			when city='Karachi' THEN order_id END ASC
			
6.SELECT Customers.name,count(Order_Items.order_id) as Total_num_of_orders,sum(Orders.total_amount) as Total_order_amount
from Customers join Orders on Customers.customer_id=Orders.customer_id join Order_Items on Order_Items.order_id=Orders.order_id
group by Customers.name
order by Total_order_amount DESC
limit 3;

7.SELECT Products.category,count(Order_Items.product_id) as Total_orders,avg(Products.stock_qty) as Average_Stock
from Products JOIN Order_Items on Products.product_id=Order_Items.product_id
group by Products.category
having count(Order_Items.product_id)>10 or avg(Products.stock_qty)<50;


8.SELECT Customers.name,Customers.city,count(Orders.order_id) as Total_orders 
from Orders join Order_Items 
on Orders.order_id=Order_Items.order_id
join Customers on Customers.customer_id=Orders.customer_id 
group by Orders.order_id
having count(Orders.order_id)>(SELECT avg((SELECT count(Order_Items.order_id) from Order_Items GROUP by Order_Items.order_id)))


9.SELECT p.name AS product_name,COUNT(DISTINCT o.customer_id) AS unique_customers, SUM(oi.quantity * oi.unit_price) AS total_revenue,
    CASE 
    	WHEN SUM(oi.quantity * oi.unit_price) > 5000 THEN 'High Revenue'
    	ELSE 'Low Revenue'
    END AS revenue_category
FROM Products p
JOIN Order_Items oi ON p.product_id = oi.product_id
JOIN Orders o ON oi.order_id = o.order_id
GROUP BY p.name
HAVING COUNT(DISTINCT o.customer_id) > 5;

